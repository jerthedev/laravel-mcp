name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Fast tests for quick CI feedback
  test-fast:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [8.2, 8.3]
        laravel: [11.*]
        stability: [prefer-lowest, prefer-stable]

    name: Fast - P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
        coverage: none

    - name: Setup problem matchers
      run: |
        echo "::add-matcher::${{ runner.tool_cache }}/php.json"
        echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Install dependencies
      run: |
        composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:^9.0" --no-interaction --no-update
        composer update --${{ matrix.stability }} --prefer-dist --no-interaction

    - name: List Installed Dependencies
      run: composer show -D

    - name: Execute fast test suite (~6s)
      run: composer run test:fast || vendor/bin/phpunit --testsuite=Fast

  # Comprehensive unit tests (optional, run on main branch)
  test-unit:
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: test-fast
    
    name: Unit Tests - PHP 8.2

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
        coverage: xdebug

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Execute unit test suite with coverage
      run: vendor/bin/phpunit --testsuite=Unit --coverage-clover=coverage.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  code-style:
    runs-on: ubuntu-latest

    name: Code Style

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
        coverage: none

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Check code style
      run: composer pint -- --test

  static-analysis:
    runs-on: ubuntu-latest

    name: Static Analysis

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
        coverage: none

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Execute static analysis
      run: vendor/bin/phpstan analyse --memory-limit=2G --error-format=github

  # PHP CS Fixer code quality check
  code-quality:
    runs-on: ubuntu-latest

    name: Code Quality (PHP CS Fixer)

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
        coverage: none
        tools: php-cs-fixer

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Check code quality with PHP CS Fixer
      run: vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.php --dry-run --diff --verbose

  # Security vulnerability scanning
  security-scan:
    runs-on: ubuntu-latest

    name: Security Scan

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
        coverage: none

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Run security audit
      run: composer audit --no-dev --format=json || true

  # Compatibility tests
  compatibility-tests:
    runs-on: ubuntu-latest
    needs: test-fast

    name: Compatibility Tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
        coverage: none

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Run compatibility tests
      run: vendor/bin/phpunit tests/Compatibility/ --testdox || echo "Compatibility tests pending implementation"